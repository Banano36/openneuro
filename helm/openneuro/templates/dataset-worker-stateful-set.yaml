apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-dataset-worker
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-dataset-worker # has to match .spec.template.metadata.labels
  serviceName: {{ .Release.Name }}-dataset-worker
  replicas: {{ .Values.dataladWorkers }}
  volumeClaimTemplates:
    - metadata:
        name: datasets-ebs
      spec:
        storageClassName: {{ .Release.Name }}-datasets
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Pi
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-dataset-worker # has to match .spec.selector.matchLabels
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      tolerations:
      - key: "storage"
        operator: "Exists"
        effect: "NoSchedule"
      volumes:
      - name: ssh-key
        secret:
          secretName: {{ .Release.Name }}-ssh-key
          items:
          - key: datalad-key
            path: datalad-key
            mode: 0400
      containers:
      - name: {{ .Release.Name }}-datalad-service
        image: 'openneuro/datalad-service:v{{ .Chart.AppVersion }}'
        command: ["gunicorn", "--bind", "0.0.0.0:80", "--reload", "datalad_service.app:create_app('/datasets')", "--workers", "8", "--worker-class", "gevent", "--timeout", "60", "--keep-alive", "30"]
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "0.2"
            memory: "512Mi"
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-configmap
        - secretRef:
            name: {{ .Release.Name }}-secret
        volumeMounts:
        - name: datasets-ebs
          mountPath: /datasets
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          httpGet:
            path: '/heartbeat'
            port: 80
      - name: {{ .Release.Name }}-dataset-worker
        image: 'openneuro/datalad-service:v{{ .Chart.AppVersion }}'
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        command:
          - /dataset-worker
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-configmap
        - secretRef:
            name: {{ .Release.Name }}-secret
        volumeMounts:
        - name: datasets-ebs
          mountPath: /datasets
        - name: ssh-key
          mountPath: /datalad-key
          subPath: datalad-key
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 1
          exec:
            command:
            - /bin/sh
            - -c
            - celery status --app datalad_service.worker | grep "${HOSTNAME}:.*OK"
