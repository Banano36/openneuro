version: 2

jobs:
  build:
    working_directory: ~/OpenNeuroOrg/openneuro
    docker:
      - image: circleci/node:10.16.3-stretch-browsers
    steps:
      - checkout
      - save_cache:
          key: dependency-cache
          paths:
            - ~/.cache/yarn
            - ~/.mongodb-binaries
      - run:
          name: yarn install
          command: yarn install
      - run:
          name: lerna bootstrap
          command: yarn bootstrap
      - run:
          name: eslint
          command: yarn lint
      - run:
          name: jest unit coverage
          # Workaround https://github.com/facebook/jest/issues/6506
          # TODO: Switch back to -w 2 after upstream fix
          command: yarn coverage --no-cache -w 2
      - run:
          name: codecov
          command: yarn run codecov

  cli-install-test:
    working_directory: ~/OpenNeuroOrg/openneuro/packages/openneuro-cli
    docker:
      - image: circleci/node:10.16.3-stretch-browsers
    steps:
      - checkout
      - run: yarn
      - run: yarn openneuro

  app-build:
    working_directory: ~/OpenNeuroOrg/openneuro
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: build openneuro-app
          command: docker build --pull -t openneuro/app -f packages/openneuro-app/Dockerfile .
      - run:
          name: docker tag + push (master)
          command: |
            if [ -z "${CIRCLE_TAG}" ] && [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag openneuro/app openneuro/app:latest
              docker push openneuro/app
            fi
      - run:
          name: docker tag + push (branch)
          command: |
            if [ -z "${CIRCLE_TAG}" ] && [ "${CIRCLE_BRANCH}" != "master" ]; then
              docker tag openneuro/app "openneuro/app:${CIRCLE_BRANCH}"
              docker push "openneuro/app:${CIRCLE_BRANCH}"
            fi
      - run:
          name: docker tag + push (tag)
          command: |
            if [ "${CIRCLE_TAG}" ]; then
              docker tag openneuro/app "openneuro/app:${CIRCLE_TAG}"
              docker push "openneuro/app:${CIRCLE_TAG}"
            fi

  server-build:
    working_directory: ~/OpenNeuroOrg/openneuro
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: build openneuro-server
          command: docker build --pull -t openneuro/server packages/openneuro-server
      - run:
          name: docker tag + push (master)
          command: |
            if [ -z "${CIRCLE_TAG}" ] && [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag openneuro/server openneuro/server:latest
              docker push openneuro/server
            fi
      - run:
          name: docker tag + push (branch)
          command: |
            if [ -z "${CIRCLE_TAG}" ] && [ "${CIRCLE_BRANCH}" != "master" ]; then
              docker tag openneuro/server "openneuro/server:${CIRCLE_BRANCH}"
              docker push "openneuro/server:${CIRCLE_BRANCH}"
            fi
      - run:
          name: docker tag + push (tag)
          command: |
            if [ "${CIRCLE_TAG}" ]; then
              docker tag openneuro/server "openneuro/server:${CIRCLE_TAG}"
              docker push "openneuro/server:${CIRCLE_TAG}"
            fi

  indexer-build:
    working_directory: ~/OpenNeuroOrg/openneuro
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: build openneuro-indexer
          command: docker build --pull -t openneuro/indexer -f packages/openneuro-indexer/Dockerfile .
      - run:
          name: docker tag + push (master)
          command: |
            if [ -z "${CIRCLE_TAG}" ] && [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag openneuro/indexer openneuro/indexer:latest
              docker push openneuro/indexer
            fi
      - run:
          name: docker tag + push (branch)
          command: |
            if [ -z "${CIRCLE_TAG}" ] && [ "${CIRCLE_BRANCH}" != "master" ]; then
              docker tag openneuro/indexer "openneuro/indexer:${CIRCLE_BRANCH}"
              docker push "openneuro/indexer:${CIRCLE_BRANCH}"
            fi
      - run:
          name: docker tag + push (tag)
          command: |
            if [ "${CIRCLE_TAG}" ]; then
              docker tag openneuro/indexer "openneuro/indexer:${CIRCLE_TAG}"
              docker push "openneuro/indexer:${CIRCLE_TAG}"
            fi

  datalad-service-test:
    docker:
      - image: circleci/python:3.6.9-stretch-node
    steps:
      - checkout

      # get the build-essentials so we can compile
      - run: sudo apt-get update && sudo apt-get install build-essential redis-server

      # install yarn for bids-validator
      - run: curl -o- -L https://yarnpkg.com/install.sh | sudo bash -s -- --version 1.9.2

      # create venv and install dependencies
      - run:
          name: Install Python deps
          command: sudo pip install -r requirements.txt
          working_directory: ~/project/services/datalad

      # Install codecov
      - run: pip install --user codecov

      # install git-annex
      - run: curl http://ia600309.us.archive.org/26/items/git-annex-builds/SHA256E-s52708477--e5930f66a9b56a88de5dabe65964e9eb59bf34c0bbb6c9bb0305773d69852add.tar.gz | tar -xvz  && sudo mv git-annex.linux/* /usr/local/bin

      # run unit tests
      - run:
          command: pytest --cov ./datalad_service
          working_directory: ~/project/services/datalad

      # Report coverage info
      - run: $(python -c "import site; print(site.USER_BASE)")/bin/codecov

  datalad-service-build:
    machine:
      enabled: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          command: docker build -t openneuro/datalad-service .
          working_directory: ~/project/services/datalad
      - run:
          name: docker tag + push (tag)
          command: |
            if [ "${CIRCLE_TAG}" ]; then
              docker tag openneuro/datalad-service "openneuro/datalad-service:${CIRCLE_TAG}"
              docker push "openneuro/datalad-service:${CIRCLE_TAG}"
            fi

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
      - datalad-service-test:
          filters:
            tags:
              only: /^v.*/
      - cli-install-test:
          filters:
            tags:
              only: /^v.*/
      - app-build:
          requires:
            - build
            - cli-install-test
            - datalad-service-test
          filters:
            tags:
              only: /^v.*/
      - server-build:
          requires:
            - build
            - cli-install-test
            - datalad-service-test
          filters:
            tags:
              only: /^v.*/
      - indexer-build:
          requires:
            - build
            - cli-install-test
            - datalad-service-test
          filters:
            tags:
              only: /^v.*/
      - datalad-service-build:
          requires:
            - build
            - cli-install-test
            - datalad-service-test
          filters:
            tags:
              only: /^v.*/
